;;; Controls the UART at 0x00

;;; Initialise UART, 9600 8N1
UART_Init:
	IN 	A, (0x03)	; Enable access to divisor registers
	SET 	7, A
	OUT 	(0x03), A	

	LD	A, 0x00		; Set divisor to 12, 9600 baud
	OUT	(0x01), A
	LD	A, 12
	OUT	(0x00), A

	LD	A, %00000011	; 8N1, reset divisor latch
	OUT 	(0x03), A

	LD	A, %00000111	; Enable FIFO
	OUT 	(0x02), A

	LD	A, %00000000	; Disable interrupts
	OUT 	(0x01), A
	
	RET

;;; Writes a single character to UART
;;; A - the character you wish to write
UART_WriteChar:
	PUSH	BC
	LD	B, A
UART_WriteChar_CheckReady:
	IN	A, (0x05)
	BIT	5, A
 	JP 	Z, UART_WriteChar_CheckReady
	LD	A, B
	OUT	(0x00), A
	POP	BC
	RET

;;; Writes a null-terminate string to UART
;;; HL - the address of the string
UART_WriteString:
	PUSH 	AF
	LD	A, (HL)
	CP	A, 0x0		; If we have hit \0, we're done
	JP	Z, UART_WriteString_Done
	CALL	UART_WriteChar
	INC	HL
UART_WriteString_Done:	
	POP 	AF
	RET
	
